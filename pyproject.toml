[build-system]
build-backend = "setuptools.build_meta"
requires = [
    "setuptools>=61",
]

[project]
name = "django-pwned-passwords"
description = "A Django password validator that checks Troy Hunt's PWNED Passwords API to see if a password has been involved in a major security breach before."
readme = "README.md"
license = { text = "MIT" }
authors = [{ name = "Sean Meyer" }]
requires-python = ">=3.8"
classifiers = [
    "Environment :: Web Environment",
    "Framework :: Django",
    "Framework :: Django :: 4.2",
    "Framework :: Django :: 5.0",
    "Framework :: Django :: 5.1",
    "License :: OSI Approved :: MIT License",
    "Operating System :: OS Independent",
    "Programming Language :: Python :: 3 :: Only",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Topic :: Internet :: WWW/HTTP",
    "Topic :: Internet :: WWW/HTTP :: Dynamic Content",
    "Topic :: Software Development :: Libraries :: Python Modules",
]
dynamic = [
    "version",
]
dependencies = [
    "django>=4.2"
]

[project.optional-dependencies]
test = [
    "pytest",
    "pytest-django",

]

[project.urls]
"CI" = "https://github.com/slinkymanbyday/django-pwned-passwords/actions"
"Changelog" = "https://github.com/slinkymanbyday/django-pwned-passwords/releases"
"Homepage" = "https://github.com/slinkymanbyday/django-pwned-passwords"
"Issues" = "https://github.com/slinkymanbyday/django-pwned-passwords/issues"

[tool.setuptools.dynamic]
version = { attr = "django_pwned_passwords.__version__" }

[tool.isort]
profile = "black"

[tool.ruff]
extend-exclude = [
    "__pycache__",
]

[tool.ruff.lint]
select = [
    # pycodestyle
    "E", "W",
    # flake8
    "F",
    # isort
    "I",
    # pytest style
    "PT",
    # eradicate commented code
    "ERA",
    # ruff lint
    "RUF",
]

[tool.pytest.ini_options]
DJANGO_SETTINGS_MODULE = "tests.settings"

[tool.bumpversion]
current_version = "5.2.0"
parse = "(?P<major>\\d+)\\.(?P<minor>\\d+)\\.(?P<patch>\\d+)"
serialize = ["{major}.{minor}.{patch}"]
search = "{current_version}"
replace = "{new_version}"
regex = false
ignore_missing_version = false
ignore_missing_files = false
tag = false
sign_tags = false
tag_name = "v{new_version}"
tag_message = "Bump version: {current_version} → {new_version}"
allow_dirty = false
commit = false
message = "Bump version: {current_version} → {new_version}"
commit_args = ""

[[tool.bumpversion.files]]
filename = "django_pwned_passwords/__init__.py"
